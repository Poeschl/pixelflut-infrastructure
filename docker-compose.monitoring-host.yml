version: '3'
services:

  vncmux:
    restart: unless-stopped
    build: ./vncmux
    command: -l 5900 -w ${pixelflut_canvas_width} -h ${pixelflut_canvas_height} ${pixelflut_host} ${pixelflut_port_vnc}
    network_mode: "host"
# For Windows enable the ports and comment out the network_mode
#    ports:
#      - 5900:5900

  prometheus:
    restart: unless-stopped
    image: "prom/prometheus:v2.34.0"
    volumes:
      - "./prometheus/pixelflut.yml:/etc/prometheus/prometheus.yml"
      - 'prometheus-data:/prometheus'
    networks:
      - monitoring_internal
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "host.pixelflut:${pixelflut_host}"

  grafana:
    restart: unless-stopped
    image: grafana/grafana:8.4.6
    # If traefik is not used, uncomment this and comment the traefik service.
    # ports:
    #   - 80:3000
    networks:
      - proxy
      - monitoring_internal
    volumes:
      - './grafana/provisioning:/etc/grafana/provisioning/'
      - 'grafana-data:/var/lib/grafana'
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "${grafana_admin_password}"
      GF_USERS_ALLOW_SIGN_UP: 'false'
      GF_USERS_AUTO_ASSIGN_ORG: 'true'
      GF_USERS_AUTO_ASSIGN_ORG_ROLE: 'Admin'
      GF_SERVER_ROOT_URL: '%(protocol)s://%(domain)s:%(http_port)s/grafana/'
      GF_SERVER_SERVE_FROM_SUB_PATH: 'true'
      GF_SECURITY_ALLOW_EMBEDDING: 'true'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.grafana.rule=PathPrefix(`/grafana`)'
      - 'traefik.http.routers.grafana.entrypoints=websecure'

  traefik:
    image: "traefik:v2.6.3"
    restart: unless-stopped
    command:
      - '--api'
      - '--api.dashboard=true'
      - '--ping=true'
      - '--ping.entrypoint=websecure'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--providers.docker.network=pixelflut-infrastructure_proxy'

      - '--entrypoints.web.address=:80'
      - '--entrypoints.web.http.redirections.entrypoint.to=websecure'
      - '--entrypoints.websecure.address=:443'
      - '--entrypoints.websecure.http.tls=true'
      - '--entrypoints.websecure.http.tls.certResolver=letsencrypt'

      - '--certificatesresolvers.letsencrypt.acme.email=${letsencrypt_email}'
      - '--certificatesresolvers.letsencrypt.acme.storage=/acme/acme.json'
      - '--certificatesresolvers.letsencrypt.acme.tlschallenge=true'

      #- '--log.level=DEBUG'
    networks:
      - proxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - 'acme-store:/acme'
    labels:
      - 'traefik.enable=true'
      # since Traefik don't allow to change the api path the referer is used as rule (https://github.com/traefik/traefik/issues/5853)
      - 'traefik.http.routers.dashboard.rule=Host(`${monitoring_domain}`) && (PathPrefix(`/traefik/dashboard`) || HeadersRegexp(`Referer`, `.*\/traefik\/dashboard\/.*`))'
      - 'traefik.http.routers.dashboard.priority=20'
      - 'traefik.http.routers.dashboard.service=api@internal'
      - 'traefik.http.routers.dashboard.entrypoints=websecure'
      - 'traefik.http.routers.dashboard.middlewares=strip-prefix-traefik'
      - 'traefik.http.middlewares.strip-prefix-traefik.stripprefix.prefixes=/traefik'

      - 'traefik.http.routers.dashboard-redirect.rule=PathPrefix(`/traefik`)'
      - 'traefik.http.routers.dashboard-redirect.priority=10'
      - 'traefik.http.routers.dashboard-redirect.service=noop@internal'
      - 'traefik.http.routers.dashboard-redirect.entrypoints=websecure'
      - 'traefik.http.routers.dashboard-redirect.middlewares=dashboard-redirect'
      - 'traefik.http.middlewares.dashboard-redirect.redirectregex.regex=^(https://.*)/traefik.*'
      - 'traefik.http.middlewares.dashboard-redirect.redirectregex.replacement=$${1}/traefik/dashboard/'

  owncast:
    image: gabekangas/owncast:0.0.11
    restart: unless-stopped
    ports:
      - "1935:1935" # open up internal rtmp port
    volumes:
      - "./owncast/logs:/app/data/logs"
      - "./owncast/owncast.db:/app/data/owncast.db"
      - "owncast-data:/app/data"
    networks:
      - proxy
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.owncast.rule=Host(`${viewer_domain}`)'
      - 'traefik.http.routers.owncast.entrypoints=websecure'
      - 'traefik.http.services.owncast.loadbalancer.server.port=8080'

  glances:
    image: nicolargo/glances:3.2.5-full
    restart: unless-stopped
    pid: host
    network_mode: host
    environment:
      GLANCES_OPT: "--quiet --export prometheus"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./glances/monitoring-config.conf:/glances/conf/glances.conf

  shoreline_exporter:
    image: python:3.10-alpine
    restart: unless-stopped
    networks:
      - monitoring_internal
    ports:
      - 7979
    command: "python /shoreline_exporter.py ${pixelflut_host} ${pixelflut_port_statistics}"
    volumes:
      - "./shoreline_exporter/shoreline_exporter.py:/shoreline_exporter.py"

networks:
  proxy:
  monitoring_internal:

volumes:
  grafana-data:
  prometheus-data:
  acme-store:
  owncast-data:
